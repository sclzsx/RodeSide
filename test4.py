from tabnanny import verbose
import cv2
import math
import numpy as np


def print_img_info(img, gain=1, verbose=0):
    print(np.min(img), np.max(img), np.mean(img), img.shape, img.dtype)
    if verbose:
        print(img)
    cv2.imshow('tmp', img * gain)
    cv2.waitKey()


bgr = cv2.imread('Data2/3.JPG')

l_X = [2,3,4,5,6,7,8,9,10,11,13,14,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,50,51,52,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,82,83,84,85,87,89,90,92,93,94,95,96,97,98,99,100,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,129,131,132,133,134,135,136,137,138,140,141,142,143,144,146,148,149,150,151,152,153,154,155,156,157,158,159,160,164,165,166,167,168,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,203,204,205,207,208,209,210,211,212,213,214,215,216,217,218,220,222,223,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325
]
l_Y = [144,144,144,143,143,143,142,142,142,141,140,140,139,139,139,138,138,138,137,137,137,136,136,136,135,135,135,134,134,134,133,133,133,132,132,132,132,131,131,130,130,130,130,129,129,128,128,128,127,127,126,126,126,125,125,125,125,124,124,124,124,123,123,123,122,122,122,121,120,120,120,119,119,119,118,118,118,117,117,117,117,116,116,116,115,115,114,114,114,114,113,113,113,113,112,112,112,112,111,111,111,110,110,110,109,109,109,108,108,108,108,107,107,107,107,106,106,106,105,105,105,104,104,103,103,103,103,102,102,102,102,101,101,101,100,99,99,99,98,98,97,97,97,97,96,96,95,95,95,94,94,94,93,93,93,92,92,92,91,91,91,90,90,90,89,89,89,88,88,87,86,86,85,85,85,84,84,83,83,83,82,82,81,81,80,79,79,78,78,77,76,76,75,75,75,74,74,73,73,72,72,71,71,70,70,69,69,68,68,67,67,66,66,65,65,64,64,63,63,62,62,61,60,60,59,59,58,58,56,56,55,55,54,53,52,51,50,50,49,49,48,47,47,46,45,45,44,43,43,42,41,41,40,39,39,38,37,36,35,34,33,33,32,31,30,30,29,28,27,27,26,25,24,23,23,22,21,20,19,18,18,17,16
]
r_X = [367,369,370,371,373,374,375,376,377,378,379,380,382,383,384,387,388,390,391,393,394,397,400,402,403,404,405,406,407,408,409,411,413,414,416,419,422,425,428,429,431,432,434,437,438,439,440,441,444,447,450,451,453,454,456,457,460,463,467,470,471,472,473,474,477,479,480,487,488,489,491,492,493,494,495,497,498,499,500,501,502,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,579,580,582,583,584,586,589,590,591,592,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625
]
r_Y = [17,16,16,15,15,14,14,14,13,13,13,13,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,13,13,13,14,15,16,17,18,19,20,20,21,23,24,24,25,25,27,29,32,32,34,35,36,37,39,42,46,48,49,50,51,52,55,57,58,66,67,68,71,72,73,74,75,78,79,80,82,83,84,87,88,89,91,92,93,95,96,97,99,100,101,103,104,106,107,108,110,111,113,114,116,117,119,120,121,123,124,126,128,129,131,132,134,135,137,138,140,141,143,145,146,148,149,151,153,154,156,158,161,163,164,166,168,169,171,173,174,176,178,180,181,183,185,187,188,190,192,194,195,197,199,204,206,210,211,213,217,222,224,226,228,232,234,235,237,239,241,243,245,247,249,250,252,254,256,258,260,262,264,266,268,270,271,273,275,277,279,281,283,285,287,289,291
]



assert len(r_X) == len(r_Y)
assert len(l_X) == len(l_Y)
# print_img_info(bgr)
H,W,_=bgr.shape
print(H,W)
print(len(l_X), min(l_X), max(l_X))
print(len(l_Y), min(l_Y), max(l_Y))
print(len(r_X), min(r_X), max(r_X))
print(len(r_Y), min(r_Y), max(r_Y))
for i in range(len(l_X)-1):
       if l_Y[i]>H:
              l_Y[i]=H
       cv2.line(bgr, (l_X[i], l_Y[i]), (l_X[i+1], l_Y[i+1]), (0, 255, 0), 3)
for i in range(len(r_X) - 1):
       if r_Y[i] > H:
              r_Y[i] = H
       cv2.line(bgr, (r_X[i], r_Y[i]), (r_X[i + 1], r_Y[i + 1]), (0, 0, 255), 3)
       # cv2.line(bgr, (r_X[i], r_Y[i]), (r_X[i + 1], r_Y[i + 1]), (0, 255, 0), 3)
# print_img_info(bgr)
cv2.imwrite('32.png', bgr)